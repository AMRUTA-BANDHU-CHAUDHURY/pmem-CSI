syntax = "proto3";
package registry.v0;
option go_package = "registry";


service Registry {
    rpc RegisterController(RegisterControllerRequest) returns (RegisterControllerReply) {}
    rpc UnregisterController(UnregisterControllerRequest) returns (UnregisterControllerReply) {}
}

message RegisterControllerRequest {
    // unique node id, usually id of the compute node in the cluster
    // which has the nvdimm installed
    string node_id = 1;
    // Node controller's address that can be used for grpc.Dial to
    // connect to the controller
    string endpoint = 2;
    // Available capacity of the node.
    map<string, uint64> capacity = 3;
}

message RegisterControllerReply {
    // empty
}

message UnregisterControllerRequest {
    // Id of the node controller to unregister from ControllerRegistry
    string node_id = 1;
}

message UnregisterControllerReply {
    // empty
}

// interface that supposed to implemented by Node controllers along with CSI.Controller interface
service NodeController {
    rpc GetCapacity(GetCapacityRequest) returns (GetCapacityReply) {}
}

message GetCapacityRequest {
    // empty
}

message GetCapacityReply {
    map<string, uint64> capacity = 1;
}
